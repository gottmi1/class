
일정 체크

11월 / 월별체크

1. 월말까지 javascript 책 80%정도 끝내기
2. 29일 웹디자인 기능사 무난하게 붙기 
3. 인문학,경제학,철학 책 한 권 씩 읽기
4. 운동 시작하기
5. 술 적게 마시기

11월 1일 금일 일정체크

토이프로젝트 - 규격만 쫒지 않았는가?
굳이 필요없는 gnb,드랍다운,슬라이드,원스크롤등을 사용해서 규격만 쫒진 않았는가?
-> 규격만 쫒아서는 신선한 것을 만들기가 힘듬

고착화 된 것을 엎어보기(쉽진 않을 것 같음)

1. 새로운 메뉴형식을 만들어 -> 새로운 경험을 접근하게 할 수 있을까?
2. 슬라이더를 대체할 새로운 이미지 포멧을 구상할 수 있을까?

자바스크립트는 모두 가능하다.

여러가지 시도들을 관찰한 경험이 부족하다 코드펜 많이 봐야함

1. 재미있는 프론트엔드 개발 관련 포폴을 수집
	어떻게 만들지? 의문을 가져본다 -> 훈련간 해결

2. 다양성을 확보 ★
	정리할것 / 리서치 / 노파심을 없애야함
	스스로가 제약을 걸고있다(규격에 맞게하기 위해)


1. 이것저것 많이 해보자
2. 모바일 버전 대응
2-1. 디자인 할 꺼리가 없다 : 디자인을 안 하면 된다.
2-2. pc버전이 선택이고 모바일버전은 ★필수★
2-3. 문서형식 배치문제는 거의 사양되었다.

실무측면
3. 모바일에서도 잘 전달할 수 있는 정보 ★
4. 모바일 기준으로 작업 - pc버전은 서브로
	익스플로러가 사양됐고, 관공서도 포기하기 시작했다.



동작하고 싶은 것을 만들고자 한다면
-> 어디까지 가능한지 경계선을 확인한다

하면 안 되는 것들 -> 백엔드영역이기 때문에
1. 파일을 바꾸는 행위
2. 파일내용을 바꾸는 행위

request(요청한다) / response(응답한다) = node.js / react

대표적인 응답방식의 변형 : 원페이지 스크롤
브라우저가 무엇을 지원하는지

두 번쨰 토이 프로젝트 부터는 모바일 버전을 고려해볼 것

xd -> 아트보드 -> 일련의 요소들을 재배치하는 과정 -> 솎아낼 것

사용자의 동선을 파악하고 -> 원하는 정보 위주로 모바일버전에 대응
@media쿼리 <- 귀찮으면 안 써도 되고 가로폭을 1920으로 안하면 됨
-> 상대값을 쓰거나 || 절대값 얼마를 쓰거나

모바일 웹브라우저 == 모바일 앱은 태생이 같다.

1. 내 컨텐츠에서 가장 중요한 것을 선별
2. 모바일에 레이아웃상으로 배치를 시작


피드백 한 것

전제 : 해당작업이 릴리즈 되었을 때 / 진짜로 만들어질 것을 예상 / 사용자의 입장






javascript : 객체, 프로토타입형 언이 . dot notation

1. 변수 , 상수 -> 식별자 무언가 구분해준다. 주소 역할을 해준다.
2. 데이터타입 : 불린(true false)
-> 비교연산자 and or 등
3. 배열 -> DOM tree 직접 확인하는 과정 index 추적을 해봤음
4. 함수 -> 기계를 만드는 과정 : 알고리즘을 설정해줘야 함(=logic) 
4-1. 함수 : 매개변수(parameter) : 입력 // 반환(return)
5. 객체 -> DOM tree, 키와 쌍으로 이루어진 무언가(키 : 밸류)
독해는 가능한데, 작문이 안되는 상황 === 현재는 당연한 것 이라고 생각해야함
6. 에디터 디버깅방식을 배우게 됨


메서드의 정의
객체 안에 함수가 프로퍼티로 포함되어 있는 경우

객체는 프로퍼티(키와 값을 넣는 곳)에 키(함수이름) : 값에 알고리즘을 넣을 수 있다

console이란 객체에 log라는 메서드를 활용하고 있었음.
console.log()

객체는 왜 필요한가?
같은 카테고리의 무언가를 모아놓기 매우 편리하다.

1. 함수를 선언하는 일반적인 방식 -> 함수만 호출하면 된다
2. 객체에 함수를 담았다면(메서드로 사용했다면) -> 객체와 객체안의 프로퍼티를 호출하면 된다.

console.dir(document.body)
console.dir(html)

모두 객체일 것
키와 값으로 되어있는 무언가일 것

검색하면서 찾아볼 것 : 어디까지 가능한가?
주요한 디자이너의 사용속성(프로퍼티)은 무엇일까?

그래봐야 객체라는 마인드로 접근
※키 값을 외우는 방식은 멍청한 짓임

남이 만들어놓은 객체를 찾는 방법 vs 내가 만들어놓은 객체를 사용하는 방법

마냥 귀찮던 개발자도구가 쓸모가 생기기 시작함 
기능을 활용해서 -> 찾을 수 있는 무언가를 캐내기 시작함

알고리즘을 독해 해보기 : 익숙해지는 것

object.key <-- 축척하는 것

문법은 : 공부하고 외우고 써보는 방식
활용처 : 예제를 샅샅이 뜯어 원리를 알아내는 것
프론트 개발자가 해야 할 업무 : 알고리즘을 만들어내는 사고력


목적 : 예제를 볼 때 당황하지 않으려고

리터럴이라는 방식이 존재하는게 함수 리터럴은
익명함수를 기명함수함수로 쓰지 않고 -> 어떤 식별자(변수)에 대입하는 방식
생긴 이유 : 해킹,보안문제 + 개발하기 편함
개발자사이에서 권장하는 방식


DOM 제어할때 많이 쓰는 키값들을 강의&훈련할 예정

1. codepen 프론트엔드 관련 작품들을 많이 보고
2. 맘에드는 작업들 골라보기 vanilla js

3. 연구 & 도전하고 싶은 작업물 골라보기

scss, less -> css를 자바스크립트로 제어하고싶은 '컴파일링'방식
-> 이런 게 있으면 값만 보면 됨
-> 선택자가 자바스크립트와 닮아있음 / 문법이 따로 있음

메서드라는 단어의 정의 -> 객체에 익숙해질 필요가 있어
1. 적절한 단위에서 피로감을 이용할 것 -> 두려움을 없애자
2. 리터럴 검색해보고 한번 보기

현재 능력단위 : "프로토타입 기초데이터 수집 및 스케치"

피드백 기준을 나름대로의 정리 -> 완성형 디자인을 XD로 구성

평가로 하지 말고 포폴챕터에 발단, 혹은 의도 서술 부분으로 활용

일정체크가 매우 핵심이 될 것
1. 개인프로젝트를 컨디션 유지해가면서 완성할 것
2. 마크업 / 무식하게연습 / 하루 한시간이면 댐
3. 자바스크립트 알아서 공부
3-1. 예제 훑기
3-2. 문법 작성해보기
1차 면접 : 서류전형
인사과 : 실무자 혹은 관리자 팀장급 -> 디자인 할만큼 한 인간이 서류를 본다

2차 면접 : 사장,임원 : 결정권자가 붙음

담당업무가 많을수록 회사에서 무시를 못함 -> 힘든대신 중요한 포지션임
업무가 좁을수록 한가지 집중 가능 -> 그저 부품일 수 있다

-> 괜찮은 회사가 있으면 스크랩 해놓고 공고가 종료되도 나중에 비교해보기

경기권 -> 1시간 반, 2시간
대전권 -> 1시간








오늘의 주제 -> 슬라이더에 한걸음 크게 다가간다(배열)

코드리뷰 : 이번 작업에서 드리고 싶은 제안
1. 큰그림, 큰액션 위주로 알고리즘 제치고 일단 작성


자바스크립트 -> 한 줄씩 읽어 내려가는 방식 : 사람이 글 읽듯 
-> 인터프리터언어 = 장)로딩이 없음 , 단) 일부분 읽지 못 할 수 있음

컴파일 언어 = 대표적으로 java가 있음. 로딩이 있지만 실행한 순간 모두 읽어옴

인터프리터 특징) 
함수를 여러개 쓰기 시작하면 : 함수 사용 순서를 정해버림. 사람은 알 수가 없음 = 여기서 에러 발생
call stack : 호출 순서

동기 방식 : 하나 완료 후 다음 거 완료 / 순서대로 실행 / 큰 작업이 밀려있을 경우 비효율적일 수 있음



셋 인터벌 쓰고싶을 때 제어가 잘 안되면
멈추는 조건을 걸어버린다.


오늘 작업 슬라이더에 접근하기 위한 알고리즘 훈련

1. 객체의 값(숫자열)을 꺼내오는 것
2. 1번 값 바꾸는 것 어떤 연산자를 사용해서 숫자를 제어
3. 배열같은 것들 어떻게 접근하나(length-1)이런거



금요일 -> 워크북 정리 제출

취직 -> 포트폴리오(만드는 게 아니라 지금까지 만든 것(퍼포먼스)를 보려주는 것)
-> 만드는 사람 : 기존 것과 다른 생각을 하는 사람들

그동안 하던 것 정리하는 것

IT기업 -> 지식재산 : 부대비용이 다른 분야보다 굉장히 낮음
-> 수익이 나는 족족 -> 회사 성장방향, 복지

면접 질문
무슨 일을 할건지에 대해
-> "이 회사는 무슨일을 하는지에 대한 대화"

담당업무 포지션에 대한 확장성 
-> "내 업무는 아마도 이런 걸 생각하고 있다라는 담당자의 계획"



git 설명 간단하게-> 저장소(repository), push,pull
터미널 : 통로
컴퓨터는 원래 글씨 나열
OS -> 그림으로 보여주는 GUI
이게 없으면 cmd처럼 보임

컴퓨터 <-OS-> 개발자
OS가 거주창스럽다
컴퓨터 <-터미널-> 개발자

마우스 조작x
명령어로 컴퓨터를 제어(텍스트)

개발환경 구축

vscode -> 터미널 : git bash -> 새로운 커맨드라인
★버전관리 git
★node.js -> react, vue등


포트폴리오 

1. 무조건 양보다 질임
1-1. 애매한 건 아예 넣지않는 게 좋음

2. 자기소개 같은 거 길게 ㄴㄴ, 

 
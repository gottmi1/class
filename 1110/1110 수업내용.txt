원티드는 ㅈㄴ 신입도 컷이개빡썐데
워크넷은 그냥저냥 할만함
매일 아침 한번씩 봐보자


javascript(es6) = typrscript // 같은 건데 문법이 조금 틀릴 뿐, type은 오류가 안 나게 더빡새게 씀
ECMAscript-> js

node.js / express -> 자바스크립트를 활용해 백엔드까지 제어하겠다
DB / SQL, no-SQL, RDBMS(관계형 데이터베이스 시스템), mySQL

SPA = react, vue, anguler ->js기반의 프레임워크
(Single Page Application)

PHP(하향곡선, 보안성의 부재) -> 백엔드용 언어, 에이전시에서 많이 씀
--> 워드프레스(php기반)

python
JAVA ->TypeScript와 비슷하다고 할 수 있음 / 저수준언어 : jpa, spring

내가 배우고 할 수 있을만한 것 : js node.js react

 
queryselector 태그를 선택하는덴 편하지만
안에 있는 어떤 값을 선택해야 할 떄는 객체 키값에 접근할 필요가 있다

활용 : 때로 객체의 값이 문자열일 때 -> 객체의 접근한 값이 문자열인지 숫자인지 판단해보면 좋음
Stirng()과 Number()를 사용해 데이터타입을 바꾸는 행위 : 형변환
숫->문    문->숫

element Node = 여닫는 태그 전체 큰놈
attribute Node = id
text Node = textContent <- 알맹이에 값을 부여
이벤트를 통해 부여

순서를 이야기할 수 있는 [배열]때문에 가치가 높음

만들어놓은 함수를 나중에 써먹을 수 있게 구조를 재조정하고 매개변수를추가해 범용성을 만들어줌

코드를 정리하는 과정을 따로 둠 -> 리팩토링

1. 사람말로 써보기
2. 일단 작성해보기
-> 초기화 -> 이벤트 -> 객체접근
3. 함수로 만들어두면 나중에 써먹을 수 있음


querySelector
querySelectorAll
getElementByid 
getElementByClassName

무엇을 리턴하는지

내장메서드들은 누군가가 만들어놓은 것
알고리즘을 다 알 필요는 없지만 
입구(argument, parameter 조건)와 
출구(return) 방식을 알 필요가 있다

구조화 -> constructor
비구조화 -> deconstructor
(구조를 뜯어서 쓰는 방식)

배열이나 변수를 타입만 값으로 정하고 비구조적으로 붙이는 방식을 보여주고 있다.


쿵쿵따 설계도

1. 몇명이 참여할지 정한다 

1-1. 해당 숫자를 number로 받음
1-2. number가 0일경우(취소를 눌러도 0 반환) 그냥 하지마 얼럿창을 띄움
                                                           
2. 첫 사람이 제시어를 말한다(3글자만 가능하게or연산자 쓰면 될듯) 3글자만 가능하게 하는 게 안됨
2-1. #order 숫자에 +1을 하며 다음사람에게 넘어감
2-2 세글자가 아니니까 다시 입력하라고함

3. 이어가다 마지막참가자 차례
3-1. 조건에 맞는 단어를 입력했으면 #order숫자는 처음으로 돌아감
3-2. 2-2와 같음

2-2,3-2 안댐


framework를 요구하는 이유 : 복잡한 액션도 로딩을 말도안되게 줄일 수 있음
react

부트스트랩 : 제이쿼리같은 라이브러리
역사
-> 트위터 직원 "제발 맨날 다시만드는 것좀 그만하자"
-> 셋팅을 미리 좀 해놓자
-> 공개해서 자랑하자
-> ㄱㅊ네 이거 쓰셈

디자인이 미리 되어있는 것들을 가져다 쓸수있음(class나 id등 규칙은 지켜야함)

부트스트랩을 사용하는 회사 

1. 디자이너가 없는 개발자 회사들
2. 빠르게 디자인해야 될 때(디자인이 중요하지 않은 업무)
3. 시안용 으로도 활용
(개발자가 편하게 쓰려고 만든 거)
쓰는 건 지양하돼 보는건 조음

JQuery는 메서드가 js와 문법이 이상하게 비슷해서 
훈련하기에 부적합하다

css : hasClass();
js : classList.contains();


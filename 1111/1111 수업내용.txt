
알고리즘 아이디어 때문 -> 원리를 잘 이해못함
알고리즘 "원리, 문법, 명세"
정의에 대해서 알 필요가 있다

데이터 타입
원시(primitive)타입 : 기본형. 숫자, 문자열, 불린 등 ex) const rago = '뭐라고라고';
참조타입(reference) : 복합형. 배열, 객체, 함수 등 ex) const onClick = () = > { console.log('뭐라고라고' };


'식별자를 가리킨다' = 식별하려고 메모리 내부의 어딘가쯤을 화살표로 지정해주고 있구나

프로그래밍에서는 에러를 만들어야 : 마음이 편하다
에러를 만나기 전에 있는 코드들은 무결(확실)하기 때문

실력이 늘고 알고리즘이 복잡해질 수록 -> 에러가 이정표가 되고 에러를 의존하게 됨

에러에 짜증이 나는 이유 -> 옛날엔 뭐가 꼬이면 에디터를 키는 버릇이 있어서
코드가 길어질수록 겁이나기 시작
-> 편리하게 개발자도구를 쓸 수 있게 되어 에러가 반가워지기 시작

타입에 대한 비약이 섞인 정의
처음엔 사람이 알기 귀찮지만
이해하면 명확하게 어떤 것인지 알게 됨
-> 쓸데없는 에러 발생률 ↓


리크루터 : 본인도 만들 줄 아는 상태
-> 일손이 부족하니까
-> 모양새만 만들어놓고 퍼블리싱(배포)?
-> 디자인이야 어차피 고민하면 되는데(거래처에 맞춰주면 될 것)


.animate([배열], {객체}) // 이 생김새는 그냥 외우는 게 좋을 것 같음

첫번째 인자로 받는 배열은 "keyFrames"에 해당함 : 알고리즘 안에는 (아마도) for문이 들어가 배열을 반복시켜줄 것임
두번쨰 인자로 받는 객체타입 : 애니메이션 관련 속성이 몇개 있는 듯


무언가 움직이고 -> 선택에 따라 동적으로 바꿔버림
움직이면서 바뀜

CSS의 키프레임과 트랜지션을 합친 성능



프론트엔드를 개발한다 -> 더 나은 UX를 위해야한다


1. 버튼을 클릭했을 때 옆에 말풍선이 나왔으면 좋겠다
2. 말풍선이 나타날 때 커졌으면 좋겠다.

1. 버튼 클릭시 이벤트발생
2. 안 보이던 말풍선이 점점 커지는 애니메이션


float 개념 display, positon 두개를 반 쯤 섞어놓은 무언가
-> 발단 : 포스팅, 신문같은 레이아웃을 쓰고싶던 디자이너의 니즈
-> 

clearfix라는 테크닉의 니즈
요소 추가 벗이 claer속성을 쓰고싶었던 것(계속 옆에 붙어버리는 놈들을 아래로 내리기 위해)

요소를 추가하고싶지않기 떄문에 ::after라는 가상선택자 이용
::after {
	content : "";
	clear : both; <마크업 하지 않은 가상요소에 적용
	display : block;
}





animation 메서드 : 시간적 요소
UX차원에서 -> 움직임을 보여주니 소비자의 관심도 ↑


프론트엔드 

자바스크립트라는 언어로
1. DOM document
2. BOM browser
------------여기까지 디자인 우세------------
3. 동작
4. 프레임워크로 웹표준, 디바이스 대응 -> 통합해서 관리할 수 없느냐 해서 나온게 react, vue

안드로이드의 네이티브언어 : kotlin, JAVA / linux기반
ios 네이티브 : swift, object-c

원래는 javascript로는 프론트밖에 못 만졌지만 node.js를 통해서

백 엔드 -> 눈에 안 보이는 거 / CPU, RAM 할당량등 

1. filesystem / 폴더(directory)관리 / .exe파일
2. 네트워크 : 주소,위치,데이터를 찾을 수 있음
3. DB : 원하는 데이터를 추려내는 알고리즘을 짜서 가져올 수 있음
4. 프론트엔드 알고리즘과 파일시스템을(서버) 결합

